/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth.index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthSlideShowRouteImport } from './routes/_auth/slide-show'
import { Route as AuthSettingIndexRouteImport } from './routes/_auth/setting/index'
import { Route as AuthUserManagementUserRouteImport } from './routes/_auth/user-management/user'
import { Route as AuthUserManagementRolesRouteImport } from './routes/_auth/user-management/roles'
import { Route as AuthUserManagementArtistRouteImport } from './routes/_auth/user-management/artist'
import { Route as AuthSettingSocialLinkRouteImport } from './routes/_auth/setting/social-link'
import { Route as AuthSettingPlatformsRouteImport } from './routes/_auth/setting/platforms'
import { Route as AuthSettingLogoRouteImport } from './routes/_auth/setting/logo'
import { Route as AuthSettingHomePageSlideShowRouteImport } from './routes/_auth/setting/home-page-slide-show'
import { Route as AuthSettingFaqRouteImport } from './routes/_auth/setting/faq'
import { Route as AuthSettingExchangeRateRouteImport } from './routes/_auth/setting/exchange-rate'
import { Route as AuthSettingApiTokenRouteImport } from './routes/_auth/setting/api-token'
import { Route as AuthProductProductsRouteImport } from './routes/_auth/product/products'
import { Route as AuthProductProductCategoriesRouteImport } from './routes/_auth/product/product-categories'
import { Route as AuthProductProductAttributesRouteImport } from './routes/_auth/product/product-attributes'
import { Route as AuthProductProductAttributeValuesRouteImport } from './routes/_auth/product/product-attribute-values'
import { Route as AuthProductFeaturedProductsRouteImport } from './routes/_auth/product/featured-products'
import { Route as AuthMusicTracksRouteImport } from './routes/_auth/music/tracks'
import { Route as AuthMusicPopularTracksRouteImport } from './routes/_auth/music/popular-tracks'
import { Route as AuthMusicGenresRouteImport } from './routes/_auth/music/genres'
import { Route as AuthMusicFeaturedArtistsRouteImport } from './routes/_auth/music/featured-artists'
import { Route as AuthMusicDataCollectRouteImport } from './routes/_auth/music/data-collect'
import { Route as AuthMusicCollectionsRouteImport } from './routes/_auth/music/collections'
import { Route as AuthMusicAlbumsRouteImport } from './routes/_auth/music/albums'
import { Route as AuthProductOrdersIndexRouteImport } from './routes/_auth/product/orders/index'
import { Route as AuthProductOrdersOrderIdRouteImport } from './routes/_auth/product/orders/$orderId'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSlideShowRoute = AuthSlideShowRouteImport.update({
  id: '/slide-show',
  path: '/slide-show',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingIndexRoute = AuthSettingIndexRouteImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUserManagementUserRoute = AuthUserManagementUserRouteImport.update({
  id: '/user-management/user',
  path: '/user-management/user',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUserManagementRolesRoute = AuthUserManagementRolesRouteImport.update({
  id: '/user-management/roles',
  path: '/user-management/roles',
  getParentRoute: () => AuthRoute,
} as any)
const AuthUserManagementArtistRoute =
  AuthUserManagementArtistRouteImport.update({
    id: '/user-management/artist',
    path: '/user-management/artist',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthSettingSocialLinkRoute = AuthSettingSocialLinkRouteImport.update({
  id: '/setting/social-link',
  path: '/setting/social-link',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingPlatformsRoute = AuthSettingPlatformsRouteImport.update({
  id: '/setting/platforms',
  path: '/setting/platforms',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingLogoRoute = AuthSettingLogoRouteImport.update({
  id: '/setting/logo',
  path: '/setting/logo',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingHomePageSlideShowRoute =
  AuthSettingHomePageSlideShowRouteImport.update({
    id: '/setting/home-page-slide-show',
    path: '/setting/home-page-slide-show',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthSettingFaqRoute = AuthSettingFaqRouteImport.update({
  id: '/setting/faq',
  path: '/setting/faq',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingExchangeRateRoute = AuthSettingExchangeRateRouteImport.update({
  id: '/setting/exchange-rate',
  path: '/setting/exchange-rate',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingApiTokenRoute = AuthSettingApiTokenRouteImport.update({
  id: '/setting/api-token',
  path: '/setting/api-token',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProductProductsRoute = AuthProductProductsRouteImport.update({
  id: '/product/products',
  path: '/product/products',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProductProductCategoriesRoute =
  AuthProductProductCategoriesRouteImport.update({
    id: '/product/product-categories',
    path: '/product/product-categories',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthProductProductAttributesRoute =
  AuthProductProductAttributesRouteImport.update({
    id: '/product/product-attributes',
    path: '/product/product-attributes',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthProductProductAttributeValuesRoute =
  AuthProductProductAttributeValuesRouteImport.update({
    id: '/product/product-attribute-values',
    path: '/product/product-attribute-values',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthProductFeaturedProductsRoute =
  AuthProductFeaturedProductsRouteImport.update({
    id: '/product/featured-products',
    path: '/product/featured-products',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthMusicTracksRoute = AuthMusicTracksRouteImport.update({
  id: '/music/tracks',
  path: '/music/tracks',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMusicPopularTracksRoute = AuthMusicPopularTracksRouteImport.update({
  id: '/music/popular-tracks',
  path: '/music/popular-tracks',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMusicGenresRoute = AuthMusicGenresRouteImport.update({
  id: '/music/genres',
  path: '/music/genres',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMusicFeaturedArtistsRoute =
  AuthMusicFeaturedArtistsRouteImport.update({
    id: '/music/featured-artists',
    path: '/music/featured-artists',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthMusicDataCollectRoute = AuthMusicDataCollectRouteImport.update({
  id: '/music/data-collect',
  path: '/music/data-collect',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMusicCollectionsRoute = AuthMusicCollectionsRouteImport.update({
  id: '/music/collections',
  path: '/music/collections',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMusicAlbumsRoute = AuthMusicAlbumsRouteImport.update({
  id: '/music/albums',
  path: '/music/albums',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProductOrdersIndexRoute = AuthProductOrdersIndexRouteImport.update({
  id: '/product/orders/',
  path: '/product/orders/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProductOrdersOrderIdRoute =
  AuthProductOrdersOrderIdRouteImport.update({
    id: '/product/orders/$orderId',
    path: '/product/orders/$orderId',
    getParentRoute: () => AuthRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/slide-show': typeof AuthSlideShowRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AuthIndexRoute
  '/music/albums': typeof AuthMusicAlbumsRoute
  '/music/collections': typeof AuthMusicCollectionsRoute
  '/music/data-collect': typeof AuthMusicDataCollectRoute
  '/music/featured-artists': typeof AuthMusicFeaturedArtistsRoute
  '/music/genres': typeof AuthMusicGenresRoute
  '/music/popular-tracks': typeof AuthMusicPopularTracksRoute
  '/music/tracks': typeof AuthMusicTracksRoute
  '/product/featured-products': typeof AuthProductFeaturedProductsRoute
  '/product/product-attribute-values': typeof AuthProductProductAttributeValuesRoute
  '/product/product-attributes': typeof AuthProductProductAttributesRoute
  '/product/product-categories': typeof AuthProductProductCategoriesRoute
  '/product/products': typeof AuthProductProductsRoute
  '/setting/api-token': typeof AuthSettingApiTokenRoute
  '/setting/exchange-rate': typeof AuthSettingExchangeRateRoute
  '/setting/faq': typeof AuthSettingFaqRoute
  '/setting/home-page-slide-show': typeof AuthSettingHomePageSlideShowRoute
  '/setting/logo': typeof AuthSettingLogoRoute
  '/setting/platforms': typeof AuthSettingPlatformsRoute
  '/setting/social-link': typeof AuthSettingSocialLinkRoute
  '/user-management/artist': typeof AuthUserManagementArtistRoute
  '/user-management/roles': typeof AuthUserManagementRolesRoute
  '/user-management/user': typeof AuthUserManagementUserRoute
  '/setting': typeof AuthSettingIndexRoute
  '/product/orders/$orderId': typeof AuthProductOrdersOrderIdRoute
  '/product/orders': typeof AuthProductOrdersIndexRoute
}
export interface FileRoutesByTo {
  '/slide-show': typeof AuthSlideShowRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AuthIndexRoute
  '/music/albums': typeof AuthMusicAlbumsRoute
  '/music/collections': typeof AuthMusicCollectionsRoute
  '/music/data-collect': typeof AuthMusicDataCollectRoute
  '/music/featured-artists': typeof AuthMusicFeaturedArtistsRoute
  '/music/genres': typeof AuthMusicGenresRoute
  '/music/popular-tracks': typeof AuthMusicPopularTracksRoute
  '/music/tracks': typeof AuthMusicTracksRoute
  '/product/featured-products': typeof AuthProductFeaturedProductsRoute
  '/product/product-attribute-values': typeof AuthProductProductAttributeValuesRoute
  '/product/product-attributes': typeof AuthProductProductAttributesRoute
  '/product/product-categories': typeof AuthProductProductCategoriesRoute
  '/product/products': typeof AuthProductProductsRoute
  '/setting/api-token': typeof AuthSettingApiTokenRoute
  '/setting/exchange-rate': typeof AuthSettingExchangeRateRoute
  '/setting/faq': typeof AuthSettingFaqRoute
  '/setting/home-page-slide-show': typeof AuthSettingHomePageSlideShowRoute
  '/setting/logo': typeof AuthSettingLogoRoute
  '/setting/platforms': typeof AuthSettingPlatformsRoute
  '/setting/social-link': typeof AuthSettingSocialLinkRoute
  '/user-management/artist': typeof AuthUserManagementArtistRoute
  '/user-management/roles': typeof AuthUserManagementRolesRoute
  '/user-management/user': typeof AuthUserManagementUserRoute
  '/setting': typeof AuthSettingIndexRoute
  '/product/orders/$orderId': typeof AuthProductOrdersOrderIdRoute
  '/product/orders': typeof AuthProductOrdersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/slide-show': typeof AuthSlideShowRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/music/albums': typeof AuthMusicAlbumsRoute
  '/_auth/music/collections': typeof AuthMusicCollectionsRoute
  '/_auth/music/data-collect': typeof AuthMusicDataCollectRoute
  '/_auth/music/featured-artists': typeof AuthMusicFeaturedArtistsRoute
  '/_auth/music/genres': typeof AuthMusicGenresRoute
  '/_auth/music/popular-tracks': typeof AuthMusicPopularTracksRoute
  '/_auth/music/tracks': typeof AuthMusicTracksRoute
  '/_auth/product/featured-products': typeof AuthProductFeaturedProductsRoute
  '/_auth/product/product-attribute-values': typeof AuthProductProductAttributeValuesRoute
  '/_auth/product/product-attributes': typeof AuthProductProductAttributesRoute
  '/_auth/product/product-categories': typeof AuthProductProductCategoriesRoute
  '/_auth/product/products': typeof AuthProductProductsRoute
  '/_auth/setting/api-token': typeof AuthSettingApiTokenRoute
  '/_auth/setting/exchange-rate': typeof AuthSettingExchangeRateRoute
  '/_auth/setting/faq': typeof AuthSettingFaqRoute
  '/_auth/setting/home-page-slide-show': typeof AuthSettingHomePageSlideShowRoute
  '/_auth/setting/logo': typeof AuthSettingLogoRoute
  '/_auth/setting/platforms': typeof AuthSettingPlatformsRoute
  '/_auth/setting/social-link': typeof AuthSettingSocialLinkRoute
  '/_auth/user-management/artist': typeof AuthUserManagementArtistRoute
  '/_auth/user-management/roles': typeof AuthUserManagementRolesRoute
  '/_auth/user-management/user': typeof AuthUserManagementUserRoute
  '/_auth/setting/': typeof AuthSettingIndexRoute
  '/_auth/product/orders/$orderId': typeof AuthProductOrdersOrderIdRoute
  '/_auth/product/orders/': typeof AuthProductOrdersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/slide-show'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/music/albums'
    | '/music/collections'
    | '/music/data-collect'
    | '/music/featured-artists'
    | '/music/genres'
    | '/music/popular-tracks'
    | '/music/tracks'
    | '/product/featured-products'
    | '/product/product-attribute-values'
    | '/product/product-attributes'
    | '/product/product-categories'
    | '/product/products'
    | '/setting/api-token'
    | '/setting/exchange-rate'
    | '/setting/faq'
    | '/setting/home-page-slide-show'
    | '/setting/logo'
    | '/setting/platforms'
    | '/setting/social-link'
    | '/user-management/artist'
    | '/user-management/roles'
    | '/user-management/user'
    | '/setting'
    | '/product/orders/$orderId'
    | '/product/orders'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/slide-show'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/music/albums'
    | '/music/collections'
    | '/music/data-collect'
    | '/music/featured-artists'
    | '/music/genres'
    | '/music/popular-tracks'
    | '/music/tracks'
    | '/product/featured-products'
    | '/product/product-attribute-values'
    | '/product/product-attributes'
    | '/product/product-categories'
    | '/product/products'
    | '/setting/api-token'
    | '/setting/exchange-rate'
    | '/setting/faq'
    | '/setting/home-page-slide-show'
    | '/setting/logo'
    | '/setting/platforms'
    | '/setting/social-link'
    | '/user-management/artist'
    | '/user-management/roles'
    | '/user-management/user'
    | '/setting'
    | '/product/orders/$orderId'
    | '/product/orders'
  id:
    | '__root__'
    | '/_auth'
    | '/_auth/slide-show'
    | '/auth/login'
    | '/auth/register'
    | '/_auth/'
    | '/_auth/music/albums'
    | '/_auth/music/collections'
    | '/_auth/music/data-collect'
    | '/_auth/music/featured-artists'
    | '/_auth/music/genres'
    | '/_auth/music/popular-tracks'
    | '/_auth/music/tracks'
    | '/_auth/product/featured-products'
    | '/_auth/product/product-attribute-values'
    | '/_auth/product/product-attributes'
    | '/_auth/product/product-categories'
    | '/_auth/product/products'
    | '/_auth/setting/api-token'
    | '/_auth/setting/exchange-rate'
    | '/_auth/setting/faq'
    | '/_auth/setting/home-page-slide-show'
    | '/_auth/setting/logo'
    | '/_auth/setting/platforms'
    | '/_auth/setting/social-link'
    | '/_auth/user-management/artist'
    | '/_auth/user-management/roles'
    | '/_auth/user-management/user'
    | '/_auth/setting/'
    | '/_auth/product/orders/$orderId'
    | '/_auth/product/orders/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/slide-show': {
      id: '/_auth/slide-show'
      path: '/slide-show'
      fullPath: '/slide-show'
      preLoaderRoute: typeof AuthSlideShowRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/': {
      id: '/_auth/setting/'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AuthSettingIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/user-management/user': {
      id: '/_auth/user-management/user'
      path: '/user-management/user'
      fullPath: '/user-management/user'
      preLoaderRoute: typeof AuthUserManagementUserRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/user-management/roles': {
      id: '/_auth/user-management/roles'
      path: '/user-management/roles'
      fullPath: '/user-management/roles'
      preLoaderRoute: typeof AuthUserManagementRolesRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/user-management/artist': {
      id: '/_auth/user-management/artist'
      path: '/user-management/artist'
      fullPath: '/user-management/artist'
      preLoaderRoute: typeof AuthUserManagementArtistRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/social-link': {
      id: '/_auth/setting/social-link'
      path: '/setting/social-link'
      fullPath: '/setting/social-link'
      preLoaderRoute: typeof AuthSettingSocialLinkRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/platforms': {
      id: '/_auth/setting/platforms'
      path: '/setting/platforms'
      fullPath: '/setting/platforms'
      preLoaderRoute: typeof AuthSettingPlatformsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/logo': {
      id: '/_auth/setting/logo'
      path: '/setting/logo'
      fullPath: '/setting/logo'
      preLoaderRoute: typeof AuthSettingLogoRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/home-page-slide-show': {
      id: '/_auth/setting/home-page-slide-show'
      path: '/setting/home-page-slide-show'
      fullPath: '/setting/home-page-slide-show'
      preLoaderRoute: typeof AuthSettingHomePageSlideShowRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/faq': {
      id: '/_auth/setting/faq'
      path: '/setting/faq'
      fullPath: '/setting/faq'
      preLoaderRoute: typeof AuthSettingFaqRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/exchange-rate': {
      id: '/_auth/setting/exchange-rate'
      path: '/setting/exchange-rate'
      fullPath: '/setting/exchange-rate'
      preLoaderRoute: typeof AuthSettingExchangeRateRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/setting/api-token': {
      id: '/_auth/setting/api-token'
      path: '/setting/api-token'
      fullPath: '/setting/api-token'
      preLoaderRoute: typeof AuthSettingApiTokenRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/products': {
      id: '/_auth/product/products'
      path: '/product/products'
      fullPath: '/product/products'
      preLoaderRoute: typeof AuthProductProductsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/product-categories': {
      id: '/_auth/product/product-categories'
      path: '/product/product-categories'
      fullPath: '/product/product-categories'
      preLoaderRoute: typeof AuthProductProductCategoriesRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/product-attributes': {
      id: '/_auth/product/product-attributes'
      path: '/product/product-attributes'
      fullPath: '/product/product-attributes'
      preLoaderRoute: typeof AuthProductProductAttributesRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/product-attribute-values': {
      id: '/_auth/product/product-attribute-values'
      path: '/product/product-attribute-values'
      fullPath: '/product/product-attribute-values'
      preLoaderRoute: typeof AuthProductProductAttributeValuesRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/featured-products': {
      id: '/_auth/product/featured-products'
      path: '/product/featured-products'
      fullPath: '/product/featured-products'
      preLoaderRoute: typeof AuthProductFeaturedProductsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/tracks': {
      id: '/_auth/music/tracks'
      path: '/music/tracks'
      fullPath: '/music/tracks'
      preLoaderRoute: typeof AuthMusicTracksRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/popular-tracks': {
      id: '/_auth/music/popular-tracks'
      path: '/music/popular-tracks'
      fullPath: '/music/popular-tracks'
      preLoaderRoute: typeof AuthMusicPopularTracksRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/genres': {
      id: '/_auth/music/genres'
      path: '/music/genres'
      fullPath: '/music/genres'
      preLoaderRoute: typeof AuthMusicGenresRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/featured-artists': {
      id: '/_auth/music/featured-artists'
      path: '/music/featured-artists'
      fullPath: '/music/featured-artists'
      preLoaderRoute: typeof AuthMusicFeaturedArtistsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/data-collect': {
      id: '/_auth/music/data-collect'
      path: '/music/data-collect'
      fullPath: '/music/data-collect'
      preLoaderRoute: typeof AuthMusicDataCollectRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/collections': {
      id: '/_auth/music/collections'
      path: '/music/collections'
      fullPath: '/music/collections'
      preLoaderRoute: typeof AuthMusicCollectionsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/albums': {
      id: '/_auth/music/albums'
      path: '/music/albums'
      fullPath: '/music/albums'
      preLoaderRoute: typeof AuthMusicAlbumsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/orders/': {
      id: '/_auth/product/orders/'
      path: '/product/orders'
      fullPath: '/product/orders'
      preLoaderRoute: typeof AuthProductOrdersIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/product/orders/$orderId': {
      id: '/_auth/product/orders/$orderId'
      path: '/product/orders/$orderId'
      fullPath: '/product/orders/$orderId'
      preLoaderRoute: typeof AuthProductOrdersOrderIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSlideShowRoute: typeof AuthSlideShowRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthMusicAlbumsRoute: typeof AuthMusicAlbumsRoute
  AuthMusicCollectionsRoute: typeof AuthMusicCollectionsRoute
  AuthMusicDataCollectRoute: typeof AuthMusicDataCollectRoute
  AuthMusicFeaturedArtistsRoute: typeof AuthMusicFeaturedArtistsRoute
  AuthMusicGenresRoute: typeof AuthMusicGenresRoute
  AuthMusicPopularTracksRoute: typeof AuthMusicPopularTracksRoute
  AuthMusicTracksRoute: typeof AuthMusicTracksRoute
  AuthProductFeaturedProductsRoute: typeof AuthProductFeaturedProductsRoute
  AuthProductProductAttributeValuesRoute: typeof AuthProductProductAttributeValuesRoute
  AuthProductProductAttributesRoute: typeof AuthProductProductAttributesRoute
  AuthProductProductCategoriesRoute: typeof AuthProductProductCategoriesRoute
  AuthProductProductsRoute: typeof AuthProductProductsRoute
  AuthSettingApiTokenRoute: typeof AuthSettingApiTokenRoute
  AuthSettingExchangeRateRoute: typeof AuthSettingExchangeRateRoute
  AuthSettingFaqRoute: typeof AuthSettingFaqRoute
  AuthSettingHomePageSlideShowRoute: typeof AuthSettingHomePageSlideShowRoute
  AuthSettingLogoRoute: typeof AuthSettingLogoRoute
  AuthSettingPlatformsRoute: typeof AuthSettingPlatformsRoute
  AuthSettingSocialLinkRoute: typeof AuthSettingSocialLinkRoute
  AuthUserManagementArtistRoute: typeof AuthUserManagementArtistRoute
  AuthUserManagementRolesRoute: typeof AuthUserManagementRolesRoute
  AuthUserManagementUserRoute: typeof AuthUserManagementUserRoute
  AuthSettingIndexRoute: typeof AuthSettingIndexRoute
  AuthProductOrdersOrderIdRoute: typeof AuthProductOrdersOrderIdRoute
  AuthProductOrdersIndexRoute: typeof AuthProductOrdersIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSlideShowRoute: AuthSlideShowRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthMusicAlbumsRoute: AuthMusicAlbumsRoute,
  AuthMusicCollectionsRoute: AuthMusicCollectionsRoute,
  AuthMusicDataCollectRoute: AuthMusicDataCollectRoute,
  AuthMusicFeaturedArtistsRoute: AuthMusicFeaturedArtistsRoute,
  AuthMusicGenresRoute: AuthMusicGenresRoute,
  AuthMusicPopularTracksRoute: AuthMusicPopularTracksRoute,
  AuthMusicTracksRoute: AuthMusicTracksRoute,
  AuthProductFeaturedProductsRoute: AuthProductFeaturedProductsRoute,
  AuthProductProductAttributeValuesRoute:
    AuthProductProductAttributeValuesRoute,
  AuthProductProductAttributesRoute: AuthProductProductAttributesRoute,
  AuthProductProductCategoriesRoute: AuthProductProductCategoriesRoute,
  AuthProductProductsRoute: AuthProductProductsRoute,
  AuthSettingApiTokenRoute: AuthSettingApiTokenRoute,
  AuthSettingExchangeRateRoute: AuthSettingExchangeRateRoute,
  AuthSettingFaqRoute: AuthSettingFaqRoute,
  AuthSettingHomePageSlideShowRoute: AuthSettingHomePageSlideShowRoute,
  AuthSettingLogoRoute: AuthSettingLogoRoute,
  AuthSettingPlatformsRoute: AuthSettingPlatformsRoute,
  AuthSettingSocialLinkRoute: AuthSettingSocialLinkRoute,
  AuthUserManagementArtistRoute: AuthUserManagementArtistRoute,
  AuthUserManagementRolesRoute: AuthUserManagementRolesRoute,
  AuthUserManagementUserRoute: AuthUserManagementUserRoute,
  AuthSettingIndexRoute: AuthSettingIndexRoute,
  AuthProductOrdersOrderIdRoute: AuthProductOrdersOrderIdRoute,
  AuthProductOrdersIndexRoute: AuthProductOrdersIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
