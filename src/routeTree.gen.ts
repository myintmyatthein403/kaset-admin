/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth.index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthSlideShowRouteImport } from './routes/_auth/slide-show'
import { Route as AuthMusicTracksRouteImport } from './routes/_auth/music/tracks'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSlideShowRoute = AuthSlideShowRouteImport.update({
  id: '/slide-show',
  path: '/slide-show',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMusicTracksRoute = AuthMusicTracksRouteImport.update({
  id: '/music/tracks',
  path: '/music/tracks',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/slide-show': typeof AuthSlideShowRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AuthIndexRoute
  '/music/tracks': typeof AuthMusicTracksRoute
}
export interface FileRoutesByTo {
  '/slide-show': typeof AuthSlideShowRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AuthIndexRoute
  '/music/tracks': typeof AuthMusicTracksRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/slide-show': typeof AuthSlideShowRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/music/tracks': typeof AuthMusicTracksRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/slide-show'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/music/tracks'
  fileRoutesByTo: FileRoutesByTo
  to: '/slide-show' | '/auth/login' | '/auth/register' | '/' | '/music/tracks'
  id:
    | '__root__'
    | '/_auth'
    | '/_auth/slide-show'
    | '/auth/login'
    | '/auth/register'
    | '/_auth/'
    | '/_auth/music/tracks'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/slide-show': {
      id: '/_auth/slide-show'
      path: '/slide-show'
      fullPath: '/slide-show'
      preLoaderRoute: typeof AuthSlideShowRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/music/tracks': {
      id: '/_auth/music/tracks'
      path: '/music/tracks'
      fullPath: '/music/tracks'
      preLoaderRoute: typeof AuthMusicTracksRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSlideShowRoute: typeof AuthSlideShowRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthMusicTracksRoute: typeof AuthMusicTracksRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSlideShowRoute: AuthSlideShowRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthMusicTracksRoute: AuthMusicTracksRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
